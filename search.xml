<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决Hexo框架下Fluid主题自带搜索框一直loading的问题</title>
    <link href="/jasonyang.github.io/2021/08/26/%E8%A7%A3%E5%86%B3Hexo%E6%A1%86%E6%9E%B6%E4%B8%8BFluid%E4%B8%BB%E9%A2%98%E6%90%9C%E7%B4%A2%E4%B8%80%E7%9B%B4loading%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/jasonyang.github.io/2021/08/26/%E8%A7%A3%E5%86%B3Hexo%E6%A1%86%E6%9E%B6%E4%B8%8BFluid%E4%B8%BB%E9%A2%98%E6%90%9C%E7%B4%A2%E4%B8%80%E7%9B%B4loading%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1>解决Hexo框架下Fluid主题自带搜索框一直loading的问题</h1><p>最开始根据Fluid主题创建个人博客时发现搜索框一直显示loading，不能进行本地搜索。最开始尝试百度和Google解答无果，便搁置了下去。最近有了时间便开始尝试解决，最终使用了一种可行的方案达到了本地搜索效果。</p><h2 id="问题描述">问题描述</h2><p>fluid主题无法搜索的问题如下：当点击博客页面的<strong>搜索</strong>按钮时，搜索页面会一直显示<strong>Loading</strong>，如下图所示：</p><p><img src="1.jpg" alt=""></p><h2 id="寻找原因">寻找原因</h2><p>打开自己的博客根文件夹，如我的就是<code>blog</code>，然后打开<code>themes\fluid\_config.yml</code>，找到<code>search</code>模块，如下所示：</p><p><img src="2.jpg" alt=""></p><p>从图中可以看到我们搜索索引的文件是<code>local-search.xml</code>，然命令行切换到<code>blog</code>目录启动hexo三连发。</p><figure class="highlight sas"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sas">cd blog<br>hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo s<br></code></pre></td></tr></tbody></table></figure><p>打开Chrome浏览器，通过localhost链接打开博客主页，然后点击搜索按钮，使用F12查看报错信息，可以看到如下报错。</p><p><img src="3.jpg" alt=""></p><p>可以发现是因为找不到这个搜索文件引发的报错，因此就有了解决方案version1。</p><h2 id="解决方案version1">解决方案version1</h2><p>因为搜索框一直loading的原因是找不到生成的<code>.xml</code>文件，然后尝试在自己的<code>blog</code>文件夹中查找<code>local-search.xml</code>文件，发现确实有随着<code>hexo g</code>命令一起生成的<code>local-search.xml</code>文件，但是文件内部并没有博客的内容，因此即使更换为该文件同样无法起到搜索作用（这个本地搜索功能本质上就是检索<code>.xml</code>文件内部的内容，因此没有博客内容的<code>.xml</code>文件起不到任何检索作用）。</p><p>接下来仔细查看<code>blog</code>文件夹，发现在<code>blog\public\</code>文件夹内生成了一个<code>search.xml</code>文件，该文件包含了博客内部的内容应该能起到检索作用。那么，开始修改！同样，打开<code>blog\themes\fluid\_config.yml</code>，找到<code>search</code>模块，更改path如下所示：</p><p><img src="4.jpg" alt=""></p><p>再次启动hexo三连大法，然后可以看到<code>主页</code>的搜索已经可以正常检索了，然而当点击到<code>分类</code>d等其他页面时，再点击搜索，同样还是Loading。</p><p><img src="5.jpg" alt=""><br><img src="1.jpg" alt=""></p><p>再次使用F12查看问题</p><p><img src="6.jpg" alt=""></p><p>发现全使用<code>search.xml</code>之后在跳转其他页面时Fluid会自动在地址上加入页面标签，比如分类页面就加上了<code>categories</code>(主页时是<code>http://localhost:4000/jasonyang.github.io/search.xml</code>，而分类页变为了<code>http://localhost:4000/jasonyang.github.io/categories/search.xml</code>)</p><p>然后就想到了使用绝对的文件索引地址，由此再每次切换页面时检索文件的地址就不会发生变化。</p><h2 id="解决方案version2">解决方案version2</h2><p>因为这个博客是为了部署到GitHub上面，因此这里将<code>blog\themes\fluid\_config.yml</code>，文件<code>search</code>版块的path更改为<code>博客项目的地址</code>+<code>search.xml</code>。例如：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">path: <span class="hljs-regexp">//</span>jayheyang.github.io<span class="hljs-regexp">/jasonyang.github.io/</span>search.xml<br></code></pre></td></tr></tbody></table></figure><p>最后<code>hexo d</code>部署到GitHub Pages，测试结果如下：</p><p><img src="7.jpg" alt=""></p><hr><p>挖个坑，2021年8月13日之后在使用<code>hexo d</code>部署时会遇到<code>Spawn failed</code>错误，网上搜索该错误的解决方法都不对，改天再说如何解决。</p><div class="note note-success">            <p><strong>Post author:</strong> jasonyang<br><strong>Copyright Notice:</strong>  All articles in this blog are licensed under <a href="https://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a> unless stating additionally. 转载请注明出处。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo,Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo和GitHub搭建自己的博客网站</title>
    <link href="/jasonyang.github.io/2021/08/26/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <url>/jasonyang.github.io/2021/08/26/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h3 id="基于Hexo和GitHub搭建自己的博客网站">基于Hexo和GitHub搭建自己的博客网站</h3><p>单边联动，基本框架搭建请参考Luo Xu的博客：点击<a href="https://ryanluoxu.github.io/2017/11/24/%E7%94%A8-Hexo-%E5%92%8C-GitHub-Pages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">这里</a>跳转。</p><h3 id="主题使用">主题使用</h3><p>本篇博客采用的是Fluid主题，主题的仓库链接如下：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>主题的详细使用指南：<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/">https://fluid-dev.github.io/hexo-fluid-docs/guide/</a></p><hr><div class="note note-success">            <p><strong>Post author:</strong> jasonyang<br><strong>Copyright Notice:</strong>  All articles in this blog are licensed under <a href="https://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a> unless stating additionally. 转载请注明出处。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown简易指南</title>
    <link href="/jasonyang.github.io/2021/07/28/Markdown%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97/"/>
    <url>/jasonyang.github.io/2021/07/28/Markdown%E7%AE%80%E6%98%93%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1>Markdown简易指南</h1><h2 id="文档标题">文档标题</h2><p>文档的标题级别通过<code>#</code>数量的多少来衡量，<code>#</code>号数量越多则级别越大，但字号越小。最后一个<code>#</code>号和标题文字之间有一个空格，且文档最多支持六级标题，具体示例如下：</p><h3 id="三级标题">三级标题</h3><h4 id="四级标题">四级标题</h4><h5 id="五级标题">五级标题</h5><p><img src="1.jpg" alt=""></p><h2 id="创建列表">创建列表</h2><h3 id="创建无序列表">创建无序列表</h3><p>在英文输入法下，通过输入<code>- </code>符号创建无序列表。</p><ul><li>无序列表1</li><li>无序列表2</li></ul><h3 id="创建有序列表">创建有序列表</h3><p>在英文输入法下，通过输入<code>1. </code>数字标记创建有序列表</p><ol><li>有序列表1</li><li>有序列表2</li></ol><p><img src="2.jpg" alt=""></p><h3 id="列表嵌套">列表嵌套</h3><p>再完成一种列表的创建之后回车下一行（可能需要删除掉下一行自动添加的同级列表标记），键入<code>Tap</code>创建嵌套列表，嵌套列表的类型由<code>Tap</code>后输入的<code>- </code>或者<code>1. </code>符号决定。</p><ol><li>有序列表1<ul><li>无序列表1.1</li><li>无序列表1.2</li></ul></li><li>有序列表2<ol><li>有序列表2.1</li><li>有序列表2.2</li></ol></li></ol><p><img src="3.jpg" alt=""></p><h3 id="创建任务清单列表">创建任务清单列表</h3><p>在英文输入法下通过键入<code>- [ ] </code>创建未完成的任务清单；通过键入<code>- [x] </code>创建已完成的任务清单。任务清单同样可以嵌套，方法同样是利用<code>Tap</code>缩进决定嵌套级别，然后通过规定符号标记确定嵌套列表的类型。</p><ul><li>[ ] 这是一个未完成的任务：锻炼<ol><li>手臂肌肉锻炼</li><li>篮球技巧联系</li></ol></li></ul><div>            <input type="checkbox" disabled="" checked="checked">这是一个已完成的任务：刷B站          </div><div>            <input type="checkbox" disabled="" checked="checked">木鱼水心的视频          </div><div>            <input type="checkbox" disabled="" checked="checked">何同学的视频          </div><p><img src="4.jpg" alt=""></p><h2 id="创建分割线">创建分割线</h2><p>可以发现在创建文档标题时，一二级标题下面会自动存在分割线，而其他的标题下面没有分割线，而通过三个以上的<code>*</code>或者<code>-</code>符号可以手动创建分割线。</p><hr><hr><p><img src="5.jpg" alt=""></p><h2 id="创建表格">创建表格</h2><p>在英文输入法下，通过<code>|</code>和<code>-</code>的组合可以创建表格。</p><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr></tbody></table><table><thead><tr><th>序号</th><th>标题</th><th>网址</th></tr></thead><tbody><tr><td>01</td><td>百度</td><td><a href="https://www.baidu.com">https://www.baidu.com</a></td></tr><tr><td>02</td><td>谷歌</td><td><a href="https://www.google.com">https://www.google.com</a></td></tr></tbody></table><p><img src="6.jpg" alt=""></p><h3 id="表格的对齐格式">表格的对齐格式</h3><p>通过在<code>----</code>两天添加英文冒号可以指定表格每列的对齐方式，<code>:----</code>、<code>:----:</code>和<code>----:</code>分别表示左对齐、居中对齐和右对齐。</p><table><thead><tr><th style="text-align:left">序号（左对齐）</th><th style="text-align:center">标题（居中对齐）</th><th style="text-align:right">网址（右对齐）</th></tr></thead><tbody><tr><td style="text-align:left">01</td><td style="text-align:center">百度</td><td style="text-align:right"><a href="https://www.baidu.com">https://www.baidu.com</a></td></tr><tr><td style="text-align:left">02</td><td style="text-align:center">谷歌</td><td style="text-align:right"><a href="https://www.google.com">https://www.google.com</a></td></tr></tbody></table><p><img src="7.jpg" alt=""></p><h2 id="插入图片">插入图片</h2><p>通过<code>![图片描述](图片网址)</code>在文档中插入图片，图片网址可以是本地地址也可以是网络图片地址，图片描述可以省略。</p><p><img src="markdown_logo.png" alt="Markdown Logo"></p><p><img src="8.jpg" alt=""></p><h2 id="插入链接">插入链接</h2><p>通过<code>[链接说明](网址链接)</code>在文档中插入网址连接，一般来说链接说明不能省略。</p><p><a href="https://www.baidu.com/">百度</a></p><p><a href="https://www.google.com/">谷歌</a></p><p><a href="https://www.github.com/">GitHub</a></p><p><img src="9.jpg" alt=""></p><h3 id="多次引用同一个网址，可以为网址指定索引标签">多次引用同一个网址，可以为网址指定索引标签</h3><p>通过<code>[索引标签]:网址连接</code>创建网址的索引标签，然后在使用<code>[链接说明][索引标签]</code>索引网址。</p><p>这里是我们常用的几个网址连接： <a href="https://www.google.com/">谷歌</a> 、<a href="https://www.baidu.com/">百度</a>和 <a href="https://www.github.com/">GitHub</a></p><p><img src="10.jpg" alt=""></p><h3 id="插入目录锚点（实现文章内部点击跳转）">插入目录锚点（实现文章内部点击跳转）</h3><p>通过<code>[目录名称](#索引标签)</code>生成目录锚点，索引标签必须和要跳转的标题章节名称对应（注：该方法只能跳转到文档标题开头处，正文不能跳转）。如果图方便生成文档目录的话可以直接采用<code>[TOC]</code>命令生成当前文档的目录。</p><p>目标检测入门算法：</p><ul><li><a href="#YOLO%E7%AE%97%E6%B3%95%E7%AE%80%E4%BB%8B">YOLO</a></li><li>[Faster R-CNN](#Faster R-CNN算法简介)</li><li><a href="#SSD%E7%AE%97%E6%B3%95%E7%AE%80%E4%BB%8B">SSD</a></li></ul><h4 id="YOLO算法简介">YOLO算法简介</h4><h4 id="Faster-R-CNN算法简介">Faster R-CNN算法简介</h4><h4 id="SSD算法简介">SSD算法简介</h4><p><img src="11.jpg" alt=""></p><h4 id="快捷生成目录">快捷生成目录</h4><p>[TOC]</p><h2 id="插入代码块">插入代码块</h2><h3 id="插入行内代码">插入行内代码</h3><p>通过使用成对的左上撇号（`）插入行内代码。</p><p>就如<code>train_func</code>所示，巴拉巴拉…</p><h3 id="插入整段代码块">插入整段代码块</h3><p>通过使用成对的三个左上撇号（`）在文档中插入代码块，同时在第一组左上撇号的后面输入代码块使用的脚本语言例如python。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_func</span>()</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params"><span class="hljs-string">'hello, world!'</span></span>)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="12.jpg" alt=""></p><h2 id="插入公式">插入公式</h2><p>分数：$$ f(x,y) = \frac{x^2}{y^3} $$</p><p>省略号：$$ f(x_1, x_2, \ldots, x_n) = x_1 + x_2 + \cdots + x_n $$</p><p><img src="13.jpg" alt=""></p><h2 id="标记引用段落">标记引用段落</h2><p>某几句话或者一句话需要特别标注是可以采用“引用”样式，使用方法是在需要引用的文字前面添加<code>&gt; </code>符号。</p><blockquote><p>这句话很重要，引用起来。</p></blockquote><h3 id="可以嵌套引用">可以嵌套引用</h3><blockquote><p>这是第一级引用、</p><blockquote><p>这是第二级引用</p><blockquote><p>这是第三级引用</p></blockquote></blockquote></blockquote><p><img src="14.jpg" alt=""></p><h2 id="常用标记">常用标记</h2><p>下面介绍正文的一些处理样式包括粗体、斜体、删除线、文本高亮、下划线、上下标等等。</p><p><strong>粗体</strong>、<em>斜体</em>、==高亮==、<s>删除线</s>、<u>下划线</u>、我是^上标^、我是~下标~</p><p><img src="15.jpg" alt=""></p><h3 id="转义符号">转义符号</h3><p>因为在Markdown中星号、加减号、括号等都有相应的指示作用，因此如果需要展示使用这些符号本身是需要用到转义字符<code>\</code>。</p><p>\<br>’<br>*<br>_<br>{}<br>[]<br>()<br>+<br>.<br>!</p><p><img src="16.jpg" alt=""></p><h3 id="插入emoji表情">插入emoji表情</h3><p>插入emoji表情的方法如下，即在成对的<code>:</code>中间填入表情对应的英文名称即可。</p><p><span class="github-emoji"><span>🥶</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f976.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br><span class="github-emoji"><span>🥵</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f975.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br><span class="github-emoji"><span>😆</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br><span class="github-emoji"><span>👏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>更多表情符号请参考这个<a href="https://www.einsition.com/tools/emojicheatsheet">链接</a></p><p><img src="17.jpg" alt=""></p><h2 id="注意事项">注意事项</h2><p>通常在正文与列表项、表格项、文档标题之间都需要留有空行。</p><hr><div class="note note-success">            <p><strong>Post author:</strong> jasonyang<br><strong>Copyright Notice:</strong>  All articles in this blog are licensed under <a href="https://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a> unless stating additionally. 转载请注明出处。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习</title>
    <link href="/jasonyang.github.io/2021/07/22/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <url>/jasonyang.github.io/2021/07/22/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>论文总结</title>
    <link href="/jasonyang.github.io/2021/07/22/%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/"/>
    <url>/jasonyang.github.io/2021/07/22/%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>论文总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>论文总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图像分割</title>
    <link href="/jasonyang.github.io/2021/07/22/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/"/>
    <url>/jasonyang.github.io/2021/07/22/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>图像分割</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图像分割</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>目标跟踪</title>
    <link href="/jasonyang.github.io/2021/07/22/%E7%9B%AE%E6%A0%87%E8%B7%9F%E8%B8%AA/"/>
    <url>/jasonyang.github.io/2021/07/22/%E7%9B%AE%E6%A0%87%E8%B7%9F%E8%B8%AA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>目标跟踪</category>
      
    </categories>
    
    
    <tags>
      
      <tag>目标跟踪</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>目标检测</title>
    <link href="/jasonyang.github.io/2021/07/22/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    <url>/jasonyang.github.io/2021/07/22/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>目标检测</category>
      
    </categories>
    
    
    <tags>
      
      <tag>目标检测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode题目积累</title>
    <link href="/jasonyang.github.io/2021/07/22/LeetCode%E9%A2%98%E7%9B%AE%E7%A7%AF%E7%B4%AF/"/>
    <url>/jasonyang.github.io/2021/07/22/LeetCode%E9%A2%98%E7%9B%AE%E7%A7%AF%E7%B4%AF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/jasonyang.github.io/"/>
    <url>/jasonyang.github.io/</url>
    
    <content type="html"><![CDATA[<p>Hello 大家好，我是Jason Yang，目前在电子科技大学读研究生，研究方向是模式识别。</p><p>这个博客主要用于记录和积累学习路上的知识、经验，以求形成系统的体系，也便于以后忘记时及时复习巩固。</p><p>有时也会分享一些读书或观影笔记（如果研究生有时间看课外书的话<span class="github-emoji"><span>😂</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>），先就这样吧<span class="github-emoji"><span>😉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
    
  </entry>
  
  
  
</search>
